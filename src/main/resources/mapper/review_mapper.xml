<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="co.cod.app.review.mapper.ReviewMapper">
	<!-- 페이징 카운트 갯수 -->
	<select id ="getCount" resultType="int">
	 SELECT count(*) from cafe c, review r, orders o
	 where  c.admin_id = r.admin_id 
	 and r.order_seq = o.order_seq
    <if test="email != null and email != ''">
     and r.email = #{email}
    </if>
    <if test="adminId != null and adminId != ''">
      and r.admin_id = #{adminId}
    </if>
	</select>
	
	<!--리뷰 평균  -->
	<select id ="getReviewAvg" resultType="double">
	select to_char(avg(stars),'9.9')
	from review
	where admin_id = #{adminId}
	</select>
	
	<!-- 단건조회  -->
	<select id="getReview" parameterType="co.cod.app.review.ReviewVO" resultType="co.cod.app.review.ReviewVO">
		SELECT 
		        review_seq,
		        email,
				review_content,
				review_time,
				stars,
				order_seq,
				photo_group,
				gdsThumbImg,
				admin_id
						
		 		
		FROM review
		WHERE review_seq = #{reviewSeq}
	</select>

	<!-- <resultMap type="#modelname" id="YourResultSet">
		<id property="param1" column="columnname1" />
		<result property="param2" column="columnname2" />
		<result property="param3" column="columnname3" />
	</resultMap> -->  
	
		<!-- 관리자조회  -->
	<select id="adminReviewList"  resultType="co.cod.app.review.ReviewVO">
	SELECT B.* FROM ( SELECT A.*, ROWNUM rn FROM (
	SELECT c.cafe_name, o.*, r.review_seq, r.review_content, r.review_time, r.stars, r.photo_group, r.gdsThumbImg
    from orders o, cafe c, review r 
    where r.order_seq= o.order_seq 
    and c.admin_id = r.admin_id	
	<if test="email != null and email != ''">
    and r.email = #{email}
    </if>
    <if test="adminId != null and adminId != ''">
    and r.admin_id = #{adminId}
    </if>
    order by review_seq desc
      ) A ) B WHERE rn between #{start} and #{end}
	</select>
	
	<!-- 전체조회  -->
	<select id="getReviewList"  resultType="co.cod.app.review.ReviewVO">
	SELECT B.* FROM ( SELECT A.*, ROWNUM rn FROM (
	SELECT c.cafe_name, o.*, r.review_seq, r.review_content, r.review_time, r.stars, r.photo_group, r.gdsThumbImg
        from orders o, cafe c, review r 
        where r.order_seq= o.order_seq 
        and c.admin_id = r.admin_id
        <if test="email != null and email != ''">
        and r.email = #{email}
        </if>
        <if test="adminId != null and adminId != ''">
        and r.admin_id = #{adminId}
       	</if>
        <if test="reviewSeq != null and reviewSeq > 0">
        and r.review_seq <![CDATA[<]]> #{reviewSeq}
        </if>
        order by review_seq desc
         ) A ) B WHERE rn <![CDATA[<=]]> 4
	</select>

	<insert id="insertReview" parameterType="co.cod.app.review.ReviewVO">
		INSERT INTO review (review_seq, email, review_content, review_time, stars, order_seq, admin_id, photo_group, gdsThumbImg)  
		
		VALUES ((select nvl(max(review_seq),0)+1 from review), #{email}, #{reviewContent},
		sysdate, #{stars}, #{orderSeq}, (select admin_id from orders where order_seq=#{orderSeq}), #{photoGroup}, #{gdsThumbImg})
	</insert>

 	<update id="updateReview" parameterType="co.cod.app.review.ReviewVO">
		UPDATE review 
		<set>
			    review_content = #{reviewContent},
			    <if test = "photoGroup != null">
			    	photo_group = #{photoGroup},
			    </if>
			    stars = #{stars},
			    <if test = "gdsThumbImg != null and gdsThumbImg != ''">
			    	gdsThumbImg = #{gdsThumbImg}
			    </if>
		</set>  
		where   review_seq = #{reviewSeq}
	</update>

	<delete id="deleteReview" parameterType="co.cod.app.review.ReviewVO">
		DELETE FROM review 
		WHERE
		review_seq = #{reviewSeq}
	</delete>
	
	<delete id="adminDeleteReview" parameterType="co.cod.app.review.ReviewVO">
		DELETE FROM review 
		WHERE
		review_seq = #{reviewSeq}
	</delete>
</mapper>
